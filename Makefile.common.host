# Define simulator profile, A_PROFILE, R_PROFILE, or M_PROFILE
CFLAGS += -DM_PROFILE

# Disable pipeline simulation for student clarity
CFLAGS += -DNO_PIPELINE

# Lots of debugging!
CFLAGS += -g3

# GTK
GTK_CFLAGS=$(shell pkg-config gtk+-2.0 --cflags)
GTK_LDFLAGS=$(shell pkg-config gtk+-2.0 --libs)

###########
# Debugging

export debug

$(warning)

ifeq ($(debug), 1)
CFLAGS += -DDEBUG1
SIMFLAGS += --printcycles
endif

# WTF? w/out empty warning make isn't picking up debug??
$(warning)

ifeq ($(debug), 2)
CFLAGS += -DDEBUG1 -DDEBUG2
SIMFLAGS += --printcycles --dumpatcycle 0
endif

########################################################
## Hacking around the ancient software supplied by CAEN:
##
## Feel free to edit / update this as needed

GCC_MAJOR    := $(shell $(CC) -v 2>&1 | \
	grep " version " | cut -d' ' -f3  | cut -d'.' -f1)
GCC_MINOR    := $(shell $(CC) -v 2>&1 | \
	grep " version " | cut -d' ' -f3  | cut -d'.' -f2)

# anyone running clang is modern enough for our purposes
ifeq ($(CC), clang)
GCC_MAJOR := 4
GCC_MINOR := 5
endif

ifneq ($(GCC_MAJOR), 4)
$(error "gcc version 4.x required")
endif

ifeq ($(GCC_MINOR), 1)
$(info )
$(info *****************************************************)
$(info * Many compiler checks unavailable on CAEN gcc;     *)
$(info * mostly since it is from 2007: gcc.gnu.org/gcc-4.1 *)
$(info * Consider building on a newer machine instead      *)
$(info *****************************************************)
$(info )
endif

ifneq (,$(findstring $(GCC_MINOR),4-5))
# Be strict on warnings
CFLAGS += -Wall -Wextra -Werror

STRICT ?= 0
ifneq ($(STRICT),0)
# And this needs explicit inclusion apparently
CFLAGS += -Wconversion
endif

# Except for some weaknesses of gcc
CFLAGS += -Wno-type-limits

# And watch out for optimizations
CFLAGS += -fno-strict-overflow
endif

# The other necessary cruft:
CFLAGS += -pthread -D_GNU_SOURCE

# Aaaannnnddd... the linker:
LDFLAGS += -g3 -pthread

# Added for student distribution
#CFLAGS += -m32
#LDFLAGS += -m32
