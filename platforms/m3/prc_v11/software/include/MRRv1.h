//************************************************************
// Desciption: MRRv1 Register File Header File
//      Generated by genRF 12/17/2015 13:48:54
//************************************************************

#ifndef MRRV1_RF_H
#define MRRV1_RF_H

// Register 0x00
typedef union mrrv1_r00{
  struct{
    unsigned MRR_EN_TX		: 1;
    unsigned MRR_CL_CTRL		: 6;
    unsigned MRR_CAP_ANTP_TUNE		: 14;
  };
  uint32_t as_int;
} mrrv1_r00_t;
#define MRRv1_R00_DEFAULT {{0x0, 0x08, 0x0000}}
_Static_assert(sizeof(mrrv1_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union mrrv1_r01{
  struct{
    unsigned MRR_CAP_ANTN_TUNE		: 14;
    unsigned MRR_CONT_TX		: 1;
  };
  uint32_t as_int;
} mrrv1_r01_t;
#define MRRv1_R01_DEFAULT {{0x0000, 0x0}}
_Static_assert(sizeof(mrrv1_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union mrrv1_r02{
  struct{
    unsigned MRR_BIAS_TUNE		: 13;
    unsigned MRR_EN_TIMER		: 1;
    unsigned MRR_RSTN_TIMER		: 1;
    unsigned MRR_AMP_I_LEVEL_SEL		: 6;
  };
  uint32_t as_int;
} mrrv1_r02_t;
#define MRRv1_R02_DEFAULT {{0x0030, 0x0, 0x0, 0x33}}
_Static_assert(sizeof(mrrv1_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union mrrv1_r03{
  struct{
    unsigned MRR_AMP_I_TC_SEL		: 3;
    unsigned MRR_DIV_SEL		: 4;
    unsigned MRR_I_LEVEL_SELB		: 7;
    unsigned MRR_I_TC_SEL		: 3;
  };
  uint32_t as_int;
} mrrv1_r03_t;
#define MRRv1_R03_DEFAULT {{0x3, 0x8, 0x7A, 0x1}}
_Static_assert(sizeof(mrrv1_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union mrrv1_r04{
  struct{
    unsigned MRR_R_SEL		: 11;
    unsigned MRR_VINHEE_SEL		: 3;
    unsigned MRR_FREQ_DIV		: 2;
    unsigned MRR_EN_CLK		: 1;
    unsigned MRR_RSTN_BB		: 1;
    unsigned MRR_START_BB		: 1;
  };
  uint32_t as_int;
} mrrv1_r04_t;
#define MRRv1_R04_DEFAULT {{0x4FF, 0x4, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(mrrv1_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union mrrv1_r05{
  struct{
    unsigned MRR_TX_PW		: 12;
  };
  uint32_t as_int;
} mrrv1_r05_t;
#define MRRv1_R05_DEFAULT {{0x0F9}}
_Static_assert(sizeof(mrrv1_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union mrrv1_r06{
  struct{
    unsigned MRR_TX_PS		: 20;
    unsigned MRR_EN_CLK_OVERRIDE		: 1;
    unsigned MRR_EN_CLK_MONITOR		: 1;
  };
  uint32_t as_int;
} mrrv1_r06_t;
#define MRRv1_R06_DEFAULT {{0x01F40, 0x0, 0x0}}
_Static_assert(sizeof(mrrv1_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union mrrv1_r07{
  struct{
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 2;
  };
  uint32_t as_int;
} mrrv1_r07_t;
#define MRRv1_R07_DEFAULT {{0x1, 0x2}}
_Static_assert(sizeof(mrrv1_r07_t) == 4, "Punned Structure Size");

#endif // MRRV1_RF_H