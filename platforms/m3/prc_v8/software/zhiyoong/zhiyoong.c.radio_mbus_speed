//*******************************************************************
//Author: ZhiYoong Foo
//Description: Random code snippets used for solo testing
//*******************************************************************
#include "m3_proc.h"

//#define RAD_ADDR 0x4
#define SNS_ADDR 0x4

//Interrupt Handlers
void handler_ext_int_0(void) __attribute__ ((interrupt ("IRQ")));
void handler_ext_int_1(void) __attribute__ ((interrupt ("IRQ")));
void handler_ext_int_2(void) __attribute__ ((interrupt ("IRQ")));
void handler_ext_int_3(void) __attribute__ ((interrupt ("IRQ")));
void handler_ext_int_0(void){
  *((volatile uint32_t *) 0xE000E280) = 0x1;
}
void handler_ext_int_1(void){
  *((volatile uint32_t *) 0xE000E280) = 0x2;
}
void handler_ext_int_2(void){
  *((volatile uint32_t *) 0xE000E280) = 0x4;
}
void handler_ext_int_3(void){
  *((volatile uint32_t *) 0xE000E280) = 0x8;
}

//Internal Functions
static void delay(unsigned ticks) {
  unsigned i;
  for (i=0; i < ticks; i++)
    asm("nop;");
}

int main() {
  
  //Clear All Pending Interrupts
  *((volatile uint32_t *) 0xE000E280) = 0xF;
  //Enable Interrupts
  *((volatile uint32_t *) 0xE000E100) = 0xF;

  //Enumeration
  enumerate(RAD_ADDR);
  asm ("wfi;");

  //Speed Up Clock
  write_mbus_register(RAD_ADDR,0x2A,0xF);

  delay(1000);
  write_mbus_register(RAD_ADDR,0,0);
  write_mbus_register(RAD_ADDR,1,0xFFFF);
  write_mbus_register(RAD_ADDR,2,0xFFFF);
  write_mbus_register(RAD_ADDR,3,0xFFFF);
  write_mbus_register(RAD_ADDR,4,0xFFFF);
  write_mbus_register(RAD_ADDR,5,0xFFFF);
  write_mbus_register(RAD_ADDR,6,0xFFFF);
  
  while (1){}
}
