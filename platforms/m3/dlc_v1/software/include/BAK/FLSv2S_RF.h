//************************************************************
// Desciption: FLSv2S Register File Header File
//      Generated by genRF 09/08/2015 00:25:36
//************************************************************

#ifndef FLSV2S_RF_H
#define FLSV2S_RF_H

// Register 0x00
typedef union flsv2s_r00{
  struct{
    unsigned Tprog		: 9;
    unsigned T10us		: 7;
    unsigned T5us		: 6;
  };
  uint32_t as_int;
} flsv2s_r00_t;
#define FLSv2S_R00_DEFAULT {{0x01D, 0x09, 0x04}}
_Static_assert(sizeof(flsv2s_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union flsv2s_r01{
  struct{
    unsigned T100us		: 12;
    unsigned Tcyc_read		: 12;
  };
  uint32_t as_int;
} flsv2s_r01_t;
#define FLSv2S_R01_DEFAULT {{0x063, 0x031}}
_Static_assert(sizeof(flsv2s_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union flsv2s_r02{
  struct{
    unsigned Terase		: 19;
  };
  uint32_t as_int;
} flsv2s_r02_t;
#define FLSv2S_R02_DEFAULT {{0x0752F}}
_Static_assert(sizeof(flsv2s_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union flsv2s_r03{
  struct{
    unsigned Tcap		: 16;
  };
  uint32_t as_int;
} flsv2s_r03_t;
#define FLSv2S_R03_DEFAULT {{0x07CF}}
_Static_assert(sizeof(flsv2s_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union flsv2s_r04{
  struct{
    unsigned Tcyc_prog		: 20;
  };
  uint32_t as_int;
} flsv2s_r04_t;
#define FLSv2S_R04_DEFAULT {{0x000C7}}
_Static_assert(sizeof(flsv2s_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union flsv2s_r05{
  struct{
    unsigned Tvref		: 17;
  };
  uint32_t as_int;
} flsv2s_r05_t;
#define FLSv2S_R05_DEFAULT {{0x01F3F}}
_Static_assert(sizeof(flsv2s_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union flsv2s_r06{
  struct{
    unsigned Tcap_ext		: 20;
  };
  uint32_t as_int;
} flsv2s_r06_t;
#define FLSv2S_R06_DEFAULT {{0x1116F}}
_Static_assert(sizeof(flsv2s_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union flsv2s_r07{
  struct{
    unsigned GO		: 1;
    unsigned CMD		: 4;
    unsigned IRQ_EN		: 1;
    unsigned LENGTH		: 11;
  };
  uint32_t as_int;
} flsv2s_r07_t;
#define FLSv2S_R07_DEFAULT {{0x0, 0x0, 0x0, 0x000}}
_Static_assert(sizeof(flsv2s_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union flsv2s_r08{
  struct{
    unsigned SRAM_START_ADDR		: 11;
  };
  uint32_t as_int;
} flsv2s_r08_t;
#define FLSv2S_R08_DEFAULT {{0x000}}
_Static_assert(sizeof(flsv2s_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union flsv2s_r09{
  struct{
    unsigned FLSH_START_ADDR		: 16;
  };
  uint32_t as_int;
} flsv2s_r09_t;
#define FLSv2S_R09_DEFAULT {{0x0000}}
_Static_assert(sizeof(flsv2s_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union flsv2s_r0A{
  struct{
    unsigned LCAP_ENB		: 1;
    unsigned COMP_ISOL		: 1;
    unsigned COMP_CLKENB		: 1;
    unsigned COMP_SLEEP		: 1;
    unsigned VREF_SLEEP		: 1;
  };
  uint32_t as_int;
} flsv2s_r0A_t;
#define FLSv2S_R0A_DEFAULT {{0x1, 0x1, 0x1, 0x1, 0x1}}
_Static_assert(sizeof(flsv2s_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union flsv2s_r0B{
  struct{
    unsigned ISOL		: 1;
    unsigned PDM33		: 1;
    unsigned FLSH_SLEEP		: 1;
  };
  uint32_t as_int;
} flsv2s_r0B_t;
#define FLSv2S_R0B_DEFAULT {{0x1, 0x1, 0x1}}
_Static_assert(sizeof(flsv2s_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union flsv2s_r0C{
  struct{
    unsigned BIT_EN_EXT		: 2;
    unsigned UPDATE_ADDR_EXT		: 1;
    unsigned WRAP_EXT		: 1;
  };
  uint32_t as_int;
} flsv2s_r0C_t;
#define FLSv2S_R0C_DEFAULT {{0x1, 0x0, 0x0}}
_Static_assert(sizeof(flsv2s_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
typedef union flsv2s_r0D{
  struct{
    unsigned TIMEOUT_EXT		: 20;
  };
  uint32_t as_int;
} flsv2s_r0D_t;
#define FLSv2S_R0D_DEFAULT {{0xFFFFF}}
_Static_assert(sizeof(flsv2s_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E
typedef union flsv2s_r0E{
  struct{
    unsigned SRAM_START_ADDR_EXT		: 11;
  };
  uint32_t as_int;
} flsv2s_r0E_t;
#define FLSv2S_R0E_DEFAULT {{0x000}}
_Static_assert(sizeof(flsv2s_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union flsv2s_r0F{
  struct{
    unsigned INT_RPLY_REG_ADDR		: 8;
    unsigned INT_RPLY_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv2s_r0F_t;
#define FLSv2S_R0F_DEFAULT {{0x00, 0x10}}
_Static_assert(sizeof(flsv2s_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
typedef union flsv2s_r10{
  struct{
    unsigned BOOT_REG_PATTERN		: 2;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned BOOT_FLAG_SUCCESS		: 1;
    unsigned BOOT_FLAG_CHKSUM_ERROR		: 1;
    unsigned BOOT_FLAG_INVALID_CMND		: 1;
    unsigned BOOT_FLAG_PWDN		: 1;
    unsigned BOOT_FLAG_WRONG_HEADER		: 1;
    unsigned BOOT_FLAG_ECC_ERROR		: 1;
    unsigned BOOT_FLAG_SLEEP		: 1;
  };
  uint32_t as_int;
} flsv2s_r10_t;
#define FLSv2S_R10_DEFAULT {{0x0 /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv2s_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union flsv2s_r11{
  struct{
    unsigned FLASH_POWER_GO		: 1;
    unsigned FLASH_POWER_SEL_ON		: 1;
    unsigned FLASH_POWER_IRQ_EN		: 1;
    unsigned FLASH_POWER_DO_FLSH		: 1;
    unsigned FLASH_POWER_DO_LARGE_CAP		: 1;
    unsigned FLASH_POWER_DO_VREFCOMP		: 1;
  };
  uint32_t as_int;
} flsv2s_r11_t;
#define FLSv2S_R11_DEFAULT {{0x0, 0x1, 0x1, 0x1, 0x1, 0x1}}
_Static_assert(sizeof(flsv2s_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union flsv2s_r12{
  struct{
    unsigned FLASH_AUTO_ON		: 1;
    unsigned FLASH_AUTO_OFF		: 1;
    unsigned FLASH_AUTO_USE_CUSTOM		: 1;
    unsigned SEL_PWR_ON_WUP		: 3;
    unsigned IRQ_PWR_ON_WUP		: 1;
  };
  uint32_t as_int;
} flsv2s_r12_t;
#define FLSv2S_R12_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv2s_r12_t) == 4, "Punned Structure Size");

// Register 0x13
typedef union flsv2s_r13{
  struct{
    unsigned PP_STR_EN		: 1;
    unsigned PP_STR_LIMIT		: 17;
  };
  uint32_t as_int;
} flsv2s_r13_t;
#define FLSv2S_R13_DEFAULT {{0x0, 0x00000}}
_Static_assert(sizeof(flsv2s_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union flsv2s_r14{
  struct{
    unsigned PP_BIT_EN_EXT		: 2;
    unsigned PP_WRAP		: 1;
    unsigned PP_USE_FAST_PROG		: 1;
    unsigned PP_NO_ERR_DETECTION		: 1;
  };
  uint32_t as_int;
} flsv2s_r14_t;
#define FLSv2S_R14_DEFAULT {{0x1, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv2s_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union flsv2s_r15{
  struct{
    unsigned PP_FLSH_ADDR		: 16;
  };
  uint32_t as_int;
} flsv2s_r15_t;
#define FLSv2S_R15_DEFAULT {{0x0000}}
_Static_assert(sizeof(flsv2s_r15_t) == 4, "Punned Structure Size");

// Register 0x16
typedef union flsv2s_r16{
  struct{
    unsigned PP_LENGTH_STREAMED		: 17;
  };
  uint32_t as_int;
} flsv2s_r16_t;
#define FLSv2S_R16_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv2s_r16_t) == 4, "Punned Structure Size");

// Register 0x17
typedef union flsv2s_r17{
  struct{
    unsigned PP_LENGTH_COPIED		: 17;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned PP_FLAG_COPY_LIMIT		: 1;
    unsigned PP_FLAG_STR_LIMIT		: 1;
    unsigned PP_FLAG_END_OF_FLASH		: 1;
  };
  uint32_t as_int;
} flsv2s_r17_t;
#define FLSv2S_R17_DEFAULT {{0x00000 /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv2s_r17_t) == 4, "Punned Structure Size");

// Register 0x18
typedef union flsv2s_r18{
  struct{
    unsigned CLK_DIV_SEL		: 2;
    unsigned CLK_RING_SEL		: 4;
  };
  uint32_t as_int;
} flsv2s_r18_t;
#define FLSv2S_R18_DEFAULT {{0x1, 0xC}}
_Static_assert(sizeof(flsv2s_r18_t) == 4, "Punned Structure Size");

// Register 0x19
typedef union flsv2s_r19{
  struct{
    unsigned COMP_CTRL_VOUT		: 3;
    unsigned COMP_CTRL_I_2STG_BAR		: 4;
    unsigned COMP_CTRL_I_1STG		: 4;
    unsigned COMP_CTRL_VREF_S2		: 4;
    unsigned COMP_CTRL_VREF_S1		: 4;
    unsigned COMP_CTRL_VREF_S0		: 4;
  };
  uint32_t as_int;
} flsv2s_r19_t;
#define FLSv2S_R19_DEFAULT {{0x3, 0x0, 0x2, 0x8, 0x8, 0x7}}
_Static_assert(sizeof(flsv2s_r19_t) == 4, "Punned Structure Size");

// Register 0x1A
typedef union flsv2s_r1A{
  struct{
    unsigned SRAM_TSEL		: 2;
    unsigned IFREN		: 1;
  };
  uint32_t as_int;
} flsv2s_r1A_t;
#define FLSv2S_R1A_DEFAULT {{0x1, 0x0}}
_Static_assert(sizeof(flsv2s_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B
// -- READ-ONLY --

// Register 0x1C
// -- READ-ONLY --

// Register 0x1D
// -- READ-ONLY --

// Register 0x1E
// -- READ-ONLY --

// Register 0x1F
typedef union flsv2s_r1F{
  struct{
    unsigned FORCE_RESETN		: 1;
  };
  uint32_t as_int;
} flsv2s_r1F_t;
#define FLSv2S_R1F_DEFAULT {{0x1}}
_Static_assert(sizeof(flsv2s_r1F_t) == 4, "Punned Structure Size");

// Register 0x20
typedef union flsv2s_r20{
  struct{
    unsigned STR_WR_CH1_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH1_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv2s_r20_t;
#define FLSv2S_R20_DEFAULT {{0x0000, 0xF0}}
_Static_assert(sizeof(flsv2s_r20_t) == 4, "Punned Structure Size");

// Register 0x21
typedef union flsv2s_r21{
  struct{
    unsigned STR_WR_CH1_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH1_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} flsv2s_r21_t;
#define FLSv2S_R21_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv2s_r21_t) == 4, "Punned Structure Size");

// Register 0x22
typedef union flsv2s_r22{
  struct{
    unsigned STR_WR_CH1_BUF_LEN		: 20;
    // ** NOT-DEFINED ** //
    unsigned STR_WR_CH1_DBLB		: 1;
    unsigned STR_WR_CH1_WRP		: 1;
    unsigned STR_WR_CH1_EN		: 1;
  };
  uint32_t as_int;
} flsv2s_r22_t;
#define FLSv2S_R22_DEFAULT {{0x007FF /* NOT-DEFINED */ , 0x0, 0x1, 0x1}}
_Static_assert(sizeof(flsv2s_r22_t) == 4, "Punned Structure Size");

// Register 0x23
typedef union flsv2s_r23{
  struct{
    unsigned STR_WR_CH1_BUF_OFF		: 20;
  };
  uint32_t as_int;
} flsv2s_r23_t;
#define FLSv2S_R23_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv2s_r23_t) == 4, "Punned Structure Size");

// Register 0x24
typedef union flsv2s_r24{
  struct{
    unsigned STR_WR_CH0_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH0_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv2s_r24_t;
#define FLSv2S_R24_DEFAULT {{0x0000, 0xF0}}
_Static_assert(sizeof(flsv2s_r24_t) == 4, "Punned Structure Size");

// Register 0x25
typedef union flsv2s_r25{
  struct{
    unsigned STR_WR_CH0_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH0_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} flsv2s_r25_t;
#define FLSv2S_R25_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv2s_r25_t) == 4, "Punned Structure Size");

// Register 0x26
typedef union flsv2s_r26{
  struct{
    unsigned STR_WR_CH0_BUF_LEN		: 20;
    // ** NOT-DEFINED ** //
    unsigned STR_WR_CH0_DBLB		: 1;
    unsigned STR_WR_CH0_WRP		: 1;
    unsigned STR_WR_CH0_EN		: 1;
  };
  uint32_t as_int;
} flsv2s_r26_t;
#define FLSv2S_R26_DEFAULT {{0x007FF /* NOT-DEFINED */ , 0x0, 0x1, 0x1}}
_Static_assert(sizeof(flsv2s_r26_t) == 4, "Punned Structure Size");

// Register 0x27
typedef union flsv2s_r27{
  struct{
    unsigned STR_WR_CH0_BUF_OFF		: 20;
  };
  uint32_t as_int;
} flsv2s_r27_t;
#define FLSv2S_R27_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv2s_r27_t) == 4, "Punned Structure Size");

// Register 0x28
// -- EMPTY --

// Register 0x29
// -- EMPTY --

// Register 0x2A
typedef union flsv2s_r2A{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} flsv2s_r2A_t;
#define FLSv2S_R2A_DEFAULT {{0x00000 /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x1}}
_Static_assert(sizeof(flsv2s_r2A_t) == 4, "Punned Structure Size");

// Register 0x2B
// -- EMPTY --

// Register 0x2C
// -- EMPTY --

// Register 0x2D
// -- EMPTY --

// Register 0x2E
// -- EMPTY --

// Register 0x2F
// -- EMPTY --

// Register 0x30
// -- EMPTY --

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
// -- EMPTY --

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
typedef union flsv2s_r37{
  struct{
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} flsv2s_r37_t;
#define FLSv2S_R37_DEFAULT {{ /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ 0x0}}
_Static_assert(sizeof(flsv2s_r37_t) == 4, "Punned Structure Size");

#endif // FLSV2S_RF_H
