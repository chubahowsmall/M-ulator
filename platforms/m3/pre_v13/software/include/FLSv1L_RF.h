//************************************************************
// Desciption: FLSv1L Register File Header File
//      Generated by genRF 06/22/2015 18:33:10
//************************************************************

#ifndef FLSV1L_RF_H
#define FLSV1L_RF_H

// Register 0x00
typedef union flsv1l_r00{
  struct{
    unsigned SRAM_TSEL		: 2;
  };
  uint32_t as_int;
} flsv1l_r00_t;
#define FLSv1L_R00_DEFAULT {{0x1}}
_Static_assert(sizeof(flsv1l_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union flsv1l_r01{
  struct{
    unsigned Terase		: 16;
    unsigned T5us		: 4;
    unsigned T10us		: 4;
  };
  uint32_t as_int;
} flsv1l_r01_t;
#define FLSv1L_R01_DEFAULT {{0x1AA0, 0x0, 0x2}}
_Static_assert(sizeof(flsv1l_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union flsv1l_r02{
  struct{
    unsigned Tcyc		: 16;
    unsigned Tprog		: 4;
    unsigned IFREN		: 1;
    unsigned IFREN1		: 1;
    unsigned REDEN		: 2;
  };
  uint32_t as_int;
} flsv1l_r02_t;
#define FLSv1L_R02_DEFAULT {{0x0010, 0x5, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv1l_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union flsv1l_r03{
  struct{
    unsigned LENGTH_EXT		: 13;
    unsigned WIDTH_EXT		: 2;
  };
  uint32_t as_int;
} flsv1l_r03_t;
#define FLSv1L_R03_DEFAULT {{0x0000, 0x0}}
_Static_assert(sizeof(flsv1l_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union flsv1l_r04{
  struct{
    unsigned TIMEOUT_EXT		: 16;
  };
  uint32_t as_int;
} flsv1l_r04_t;
#define FLSv1L_R04_DEFAULT {{0xFFFF}}
_Static_assert(sizeof(flsv1l_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union flsv1l_r05{
  struct{
    unsigned GO		: 1;
    unsigned CMD		: 3;
    unsigned LENGTH		: 11;
    unsigned IRQ_EN		: 1;
    unsigned ISOL		: 1;
    unsigned PDM33		: 1;
    unsigned FLSH_SLEEP		: 1;
  };
  uint32_t as_int;
} flsv1l_r05_t;
#define FLSv1L_R05_DEFAULT {{0x0, 0x0, 0x000, 0x0, 0x1, 0x1, 0x1}}
_Static_assert(sizeof(flsv1l_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union flsv1l_r06{
  struct{
    unsigned SRAM_START_ADDR		: 13;
  };
  uint32_t as_int;
} flsv1l_r06_t;
#define FLSv1L_R06_DEFAULT {{0x0000}}
_Static_assert(sizeof(flsv1l_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union flsv1l_r07{
  struct{
    unsigned FLSH_START_ADDR		: 19;
  };
  uint32_t as_int;
} flsv1l_r07_t;
#define FLSv1L_R07_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv1l_r07_t) == 4, "Punned Structure Size");

// Register 0x08
// -- READ-ONLY --

// Register 0x09
typedef union flsv1l_r09{
  struct{
    unsigned CAP_S_EN		: 1;
    unsigned CAP_L_EN		: 1;
    unsigned WR_EN		: 1;
    unsigned VTG_LMT_AMP_EN		: 1;
    unsigned VTG_LMT_DIV_EN		: 1;
    unsigned VREF_EN		: 1;
  };
  uint32_t as_int;
} flsv1l_r09_t;
#define FLSv1L_R09_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv1l_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union flsv1l_r0A{
  struct{
    unsigned CRT_TUNE		: 6;
    unsigned VTG_TUNE		: 4;
  };
  uint32_t as_int;
} flsv1l_r0A_t;
#define FLSv1L_R0A_DEFAULT {{0x1E, 0x8}}
_Static_assert(sizeof(flsv1l_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union flsv1l_r0B{
  struct{
    unsigned CLK_SEL		: 5;
  };
  uint32_t as_int;
} flsv1l_r0B_t;
#define FLSv1L_R0B_DEFAULT {{0x10}}
_Static_assert(sizeof(flsv1l_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union flsv1l_r0C{
  struct{
    unsigned INT_RPLY_REG_ADDR		: 8;
    unsigned INT_RPLY_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv1l_r0C_t;
#define FLSv1L_R0C_DEFAULT {{0x00, 0x10}}
_Static_assert(sizeof(flsv1l_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
// -- READ-ONLY --

// Register 0x0E
typedef union flsv1l_r0E{
  struct{
    unsigned BOOT_REG_PATTERN		: 2;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned BOOT_FLAG_SUCCESS		: 1;
    unsigned BOOT_FLAG_CHKSUM_ERROR		: 1;
    unsigned BOOT_FLAG_INVALID_CMND		: 1;
    unsigned BOOT_FLAG_PWDN		: 1;
    unsigned BOOT_FLAG_WRONG_HEADER		: 1;
    unsigned BOOT_FLAG_ECC_ERROR		: 1;
    unsigned BOOT_FLAG_SLEEP		: 1;
  };
  uint32_t as_int;
} flsv1l_r0E_t;
#define FLSv1L_R0E_DEFAULT {{0x0 /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(flsv1l_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union flsv1l_r0F{
  struct{
    unsigned Tclamp0		: 14;
    unsigned Tclamp1		: 10;
  };
  uint32_t as_int;
} flsv1l_r0F_t;
#define FLSv1L_R0F_DEFAULT {{0x085F, 0x15E}}
_Static_assert(sizeof(flsv1l_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
// -- READ-ONLY --

// Register 0x11
typedef union flsv1l_r11{
  struct{
    unsigned FLASH_POWER_ON		: 1;
    unsigned FLASH_POWER_CTRL_EN		: 1;
  };
  uint32_t as_int;
} flsv1l_r11_t;
#define FLSv1L_R11_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(flsv1l_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union flsv1l_r12{
  struct{
    unsigned DISABLE_AUTO_RESET		: 1;
  };
  uint32_t as_int;
} flsv1l_r12_t;
#define FLSv1L_R12_DEFAULT {{0x0}}
_Static_assert(sizeof(flsv1l_r12_t) == 4, "Punned Structure Size");

// Register 0x13
// -- EMPTY --

// Register 0x14
// -- EMPTY --

// Register 0x15
// -- EMPTY --

// Register 0x16
// -- EMPTY --

// Register 0x17
// -- EMPTY --

// Register 0x18
// -- EMPTY --

// Register 0x19
// -- EMPTY --

// Register 0x1A
// -- EMPTY --

// Register 0x1B
// -- EMPTY --

// Register 0x1C
// -- EMPTY --

// Register 0x1D
// -- EMPTY --

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
// -- EMPTY --

// Register 0x21
// -- EMPTY --

// Register 0x22
// -- EMPTY --

// Register 0x23
// -- EMPTY --

// Register 0x24
// -- EMPTY --

// Register 0x25
// -- EMPTY --

// Register 0x26
// -- EMPTY --

// Register 0x27
// -- EMPTY --

// Register 0x28
// -- EMPTY --

// Register 0x29
// -- EMPTY --

// Register 0x2A
// -- EMPTY --

// Register 0x2B
// -- EMPTY --

// Register 0x2C
// -- EMPTY --

// Register 0x2D
// -- EMPTY --

// Register 0x2E
// -- EMPTY --

// Register 0x2F
// -- EMPTY --

// Register 0x30
// -- EMPTY --

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
// -- EMPTY --

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
// -- EMPTY --

// Register 0x40
// -- EMPTY --

// Register 0x41
// -- EMPTY --

// Register 0x42
// -- EMPTY --

// Register 0x43
// -- EMPTY --

// Register 0x44
// -- EMPTY --

// Register 0x45
// -- EMPTY --

// Register 0x46
// -- EMPTY --

// Register 0x47
// -- EMPTY --

// Register 0x48
// -- EMPTY --

// Register 0x49
// -- EMPTY --

// Register 0x4A
// -- EMPTY --

// Register 0x4B
// -- EMPTY --

// Register 0x4C
// -- EMPTY --

// Register 0x4D
// -- EMPTY --

// Register 0x4E
// -- EMPTY --

// Register 0x4F
// -- EMPTY --

// Register 0x50
// -- EMPTY --

// Register 0x51
// -- EMPTY --

// Register 0x52
// -- EMPTY --

// Register 0x53
// -- EMPTY --

// Register 0x54
// -- EMPTY --

// Register 0x55
// -- EMPTY --

// Register 0x56
// -- EMPTY --

// Register 0x57
// -- EMPTY --

// Register 0x58
// -- EMPTY --

// Register 0x59
// -- EMPTY --

// Register 0x5A
// -- EMPTY --

// Register 0x5B
// -- EMPTY --

// Register 0x5C
// -- EMPTY --

// Register 0x5D
// -- EMPTY --

// Register 0x5E
// -- EMPTY --

// Register 0x5F
// -- EMPTY --

// Register 0x60
// -- EMPTY --

// Register 0x61
// -- EMPTY --

// Register 0x62
// -- EMPTY --

// Register 0x63
// -- EMPTY --

// Register 0x64
// -- EMPTY --

// Register 0x65
// -- EMPTY --

// Register 0x66
// -- EMPTY --

// Register 0x67
// -- EMPTY --

// Register 0x68
// -- EMPTY --

// Register 0x69
// -- EMPTY --

// Register 0x6A
// -- EMPTY --

// Register 0x6B
// -- EMPTY --

// Register 0x6C
// -- EMPTY --

// Register 0x6D
// -- EMPTY --

// Register 0x6E
// -- EMPTY --

// Register 0x6F
// -- EMPTY --

// Register 0x70
// -- EMPTY --

// Register 0x71
// -- EMPTY --

// Register 0x72
// -- EMPTY --

// Register 0x73
// -- EMPTY --

// Register 0x74
// -- EMPTY --

// Register 0x75
// -- EMPTY --

// Register 0x76
// -- EMPTY --

// Register 0x77
// -- EMPTY --

// Register 0x78
// -- EMPTY --

// Register 0x79
// -- EMPTY --

// Register 0x7A
// -- EMPTY --

// Register 0x7B
// -- EMPTY --

// Register 0x7C
// -- EMPTY --

// Register 0x7D
// -- EMPTY --

// Register 0x7E
// -- EMPTY --

// Register 0x7F
// -- EMPTY --

// Register 0x80
// -- EMPTY --

// Register 0x81
// -- EMPTY --

// Register 0x82
// -- EMPTY --

// Register 0x83
// -- EMPTY --

// Register 0x84
// -- EMPTY --

// Register 0x85
// -- EMPTY --

// Register 0x86
// -- EMPTY --

// Register 0x87
// -- EMPTY --

// Register 0x88
// -- EMPTY --

// Register 0x89
// -- EMPTY --

// Register 0x8A
// -- EMPTY --

// Register 0x8B
// -- EMPTY --

// Register 0x8C
// -- EMPTY --

// Register 0x8D
// -- EMPTY --

// Register 0x8E
// -- EMPTY --

// Register 0x8F
// -- EMPTY --

// Register 0x90
// -- EMPTY --

// Register 0x91
// -- EMPTY --

// Register 0x92
// -- EMPTY --

// Register 0x93
// -- EMPTY --

// Register 0x94
// -- EMPTY --

// Register 0x95
// -- EMPTY --

// Register 0x96
// -- EMPTY --

// Register 0x97
// -- EMPTY --

// Register 0x98
// -- EMPTY --

// Register 0x99
// -- EMPTY --

// Register 0x9A
// -- EMPTY --

// Register 0x9B
// -- EMPTY --

// Register 0x9C
// -- EMPTY --

// Register 0x9D
// -- EMPTY --

// Register 0x9E
// -- EMPTY --

// Register 0x9F
// -- EMPTY --

// Register 0xA0
// -- EMPTY --

// Register 0xA1
// -- EMPTY --

// Register 0xA2
// -- EMPTY --

// Register 0xA3
// -- EMPTY --

// Register 0xA4
// -- EMPTY --

// Register 0xA5
// -- EMPTY --

// Register 0xA6
// -- EMPTY --

// Register 0xA7
// -- EMPTY --

// Register 0xA8
// -- EMPTY --

// Register 0xA9
// -- EMPTY --

// Register 0xAA
// -- EMPTY --

// Register 0xAB
// -- EMPTY --

// Register 0xAC
// -- EMPTY --

// Register 0xAD
// -- EMPTY --

// Register 0xAE
// -- EMPTY --

// Register 0xAF
// -- EMPTY --

// Register 0xB0
// -- EMPTY --

// Register 0xB1
// -- EMPTY --

// Register 0xB2
// -- EMPTY --

// Register 0xB3
// -- EMPTY --

// Register 0xB4
// -- EMPTY --

// Register 0xB5
// -- EMPTY --

// Register 0xB6
// -- EMPTY --

// Register 0xB7
// -- EMPTY --

// Register 0xB8
// -- EMPTY --

// Register 0xB9
// -- EMPTY --

// Register 0xBA
// -- EMPTY --

// Register 0xBB
// -- EMPTY --

// Register 0xBC
// -- EMPTY --

// Register 0xBD
// -- EMPTY --

// Register 0xBE
// -- EMPTY --

// Register 0xBF
// -- EMPTY --

// Register 0xC0
// -- EMPTY --

// Register 0xC1
// -- EMPTY --

// Register 0xC2
// -- EMPTY --

// Register 0xC3
// -- EMPTY --

// Register 0xC4
// -- EMPTY --

// Register 0xC5
// -- EMPTY --

// Register 0xC6
// -- EMPTY --

// Register 0xC7
// -- EMPTY --

// Register 0xC8
// -- EMPTY --

// Register 0xC9
// -- EMPTY --

// Register 0xCA
// -- EMPTY --

// Register 0xCB
// -- EMPTY --

// Register 0xCC
// -- EMPTY --

// Register 0xCD
// -- EMPTY --

// Register 0xCE
// -- EMPTY --

// Register 0xCF
// -- EMPTY --

// Register 0xD0
// -- EMPTY --

// Register 0xD1
// -- EMPTY --

// Register 0xD2
// -- EMPTY --

// Register 0xD3
// -- EMPTY --

// Register 0xD4
// -- EMPTY --

// Register 0xD5
// -- EMPTY --

// Register 0xD6
// -- EMPTY --

// Register 0xD7
// -- EMPTY --

// Register 0xD8
// -- EMPTY --

// Register 0xD9
// -- EMPTY --

// Register 0xDA
// -- EMPTY --

// Register 0xDB
// -- EMPTY --

// Register 0xDC
// -- EMPTY --

// Register 0xDD
// -- EMPTY --

// Register 0xDE
// -- EMPTY --

// Register 0xDF
// -- EMPTY --

// Register 0xE0
// -- EMPTY --

// Register 0xE1
// -- EMPTY --

// Register 0xE2
// -- EMPTY --

// Register 0xE3
// -- EMPTY --

// Register 0xE4
// -- EMPTY --

// Register 0xE5
// -- EMPTY --

// Register 0xE6
// -- EMPTY --

// Register 0xE7
// -- EMPTY --

// Register 0xE8
typedef union flsv1l_rE8{
  struct{
    unsigned STR_WR_CH1_WR_BUF_15_0		: 16;
    unsigned STR_WR_CH1_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv1l_rE8_t;
#define FLSv1L_RE8_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv1l_rE8_t) == 4, "Punned Structure Size");

// Register 0xE9
typedef union flsv1l_rE9{
  struct{
    unsigned STR_WR_CH1_WR_BUF_31_16		: 16;
    unsigned STR_WR_CH1_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} flsv1l_rE9_t;
#define FLSv1L_RE9_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv1l_rE9_t) == 4, "Punned Structure Size");

// Register 0xEA
typedef union flsv1l_rEA{
  struct{
    unsigned STR_WR_CH1_BUF_LEN		: 20;
    // ** NOT-DEFINED ** //
    unsigned STR_WR_CH1_DBLB		: 1;
    unsigned STR_WR_CH1_WRP		: 1;
    unsigned STR_WR_CH1_EN		: 1;
  };
  uint32_t as_int;
} flsv1l_rEA_t;
#define FLSv1L_REA_DEFAULT {{0x01FFF /* NOT-DEFINED */ , 0x0, 0x0, 0x1}}
_Static_assert(sizeof(flsv1l_rEA_t) == 4, "Punned Structure Size");

// Register 0xEB
typedef union flsv1l_rEB{
  struct{
    unsigned STR_WR_CH1_BUF_OFF		: 20;
  };
  uint32_t as_int;
} flsv1l_rEB_t;
#define FLSv1L_REB_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv1l_rEB_t) == 4, "Punned Structure Size");

// Register 0xEC
typedef union flsv1l_rEC{
  struct{
    unsigned STR_WR_CH0_WR_BUF_15_0		: 16;
    unsigned STR_WR_CH0_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} flsv1l_rEC_t;
#define FLSv1L_REC_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv1l_rEC_t) == 4, "Punned Structure Size");

// Register 0xED
typedef union flsv1l_rED{
  struct{
    unsigned STR_WR_CH0_WR_BUF_31_16		: 16;
    unsigned STR_WR_CH0_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} flsv1l_rED_t;
#define FLSv1L_RED_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(flsv1l_rED_t) == 4, "Punned Structure Size");

// Register 0xEE
typedef union flsv1l_rEE{
  struct{
    unsigned STR_WR_CH0_BUF_LEN		: 20;
    // ** NOT-DEFINED ** //
    unsigned STR_WR_CH0_DBLB		: 1;
    unsigned STR_WR_CH0_WRP		: 1;
    unsigned STR_WR_CH0_EN		: 1;
  };
  uint32_t as_int;
} flsv1l_rEE_t;
#define FLSv1L_REE_DEFAULT {{0x01FFF /* NOT-DEFINED */ , 0x0, 0x0, 0x1}}
_Static_assert(sizeof(flsv1l_rEE_t) == 4, "Punned Structure Size");

// Register 0xEF
typedef union flsv1l_rEF{
  struct{
    unsigned STR_WR_CH0_BUF_OFF		: 20;
  };
  uint32_t as_int;
} flsv1l_rEF_t;
#define FLSv1L_REF_DEFAULT {{0x00000}}
_Static_assert(sizeof(flsv1l_rEF_t) == 4, "Punned Structure Size");

// Register 0xF0
// -- EMPTY --

// Register 0xF1
// -- EMPTY --

// Register 0xF2
typedef union flsv1l_rF2{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} flsv1l_rF2_t;
#define FLSv1L_RF2_DEFAULT {{0x00000 /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x1}}
_Static_assert(sizeof(flsv1l_rF2_t) == 4, "Punned Structure Size");

// Register 0xF3
// -- EMPTY --

// Register 0xF4
// -- EMPTY --

// Register 0xF5
// -- EMPTY --

// Register 0xF6
// -- EMPTY --

// Register 0xF7
// -- EMPTY --

// Register 0xF8
typedef union flsv1l_rF8{
  struct{
    unsigned ACT_REG_F8		: 24;
  };
  uint32_t as_int;
} flsv1l_rF8_t;
#define FLSv1L_RF8_DEFAULT {{0x000000}}
_Static_assert(sizeof(flsv1l_rF8_t) == 4, "Punned Structure Size");

// Register 0xF9
typedef union flsv1l_rF9{
  struct{
    unsigned ACT_REG_F9		: 24;
  };
  uint32_t as_int;
} flsv1l_rF9_t;
#define FLSv1L_RF9_DEFAULT {{0x000000}}
_Static_assert(sizeof(flsv1l_rF9_t) == 4, "Punned Structure Size");

// Register 0xFA
typedef union flsv1l_rFA{
  struct{
    unsigned ACT_REG_FA		: 24;
  };
  uint32_t as_int;
} flsv1l_rFA_t;
#define FLSv1L_RFA_DEFAULT {{0x000000}}
_Static_assert(sizeof(flsv1l_rFA_t) == 4, "Punned Structure Size");

// Register 0xFB
typedef union flsv1l_rFB{
  struct{
    unsigned ACT_REG_FB		: 24;
  };
  uint32_t as_int;
} flsv1l_rFB_t;
#define FLSv1L_RFB_DEFAULT {{0x000000}}
_Static_assert(sizeof(flsv1l_rFB_t) == 4, "Punned Structure Size");

// Register 0xFC
typedef union flsv1l_rFC{
  struct{
    unsigned ACT_REG_FC		: 24;
  };
  uint32_t as_int;
} flsv1l_rFC_t;
#define FLSv1L_RFC_DEFAULT {{0x000000}}
_Static_assert(sizeof(flsv1l_rFC_t) == 4, "Punned Structure Size");

// Register 0xFD
// -- EMPTY --

// Register 0xFE
// -- EMPTY --

// Register 0xFF
typedef union flsv1l_rFF{
  struct{
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned ACT_INTO		: 1;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned ACT_RSTS		: 1;
    unsigned ACT_RSTB		: 1;
    unsigned ACT_RSTR		: 1;
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    // ** NOT-DEFINED ** //
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} flsv1l_rFF_t;
#define FLSv1L_RFF_DEFAULT {{ /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ 0x0 /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0, 0x0, 0x0 /* NOT-DEFINED */  /* NOT-DEFINED */  /* NOT-DEFINED */ , 0x0}}
_Static_assert(sizeof(flsv1l_rFF_t) == 4, "Punned Structure Size");

#endif // FLSV1L_RF_H
