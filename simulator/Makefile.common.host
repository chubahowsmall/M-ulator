# Define simulator profile, A_PROFILE, R_PROFILE, or M_PROFILE
PROFILE = M_PROFILE

# Define the platform currently being simulated
PLATFORM = 373

MEMMAP = cpu/$(PLATFORM)/memmap.h

##############

CFLAGS += -I$(LEVEL)

CFLAGS += -D$(PROFILE)
#CFLAGS += '-DMEMMAP_H="$(MEMMAP)"'

# Disable pipeline simulation for student clarity
#CFLAGS += -DNO_PIPELINE

# Lots of debugging!
CFLAGS += -g3

# GTK
GTK_CFLAGS=$(shell pkg-config gtk+-2.0 --cflags)
GTK_LDFLAGS=$(shell pkg-config gtk+-2.0 --libs)

###########
# Debugging

export debug

$(warning)

#ifeq ($(strip $(debug)),)
# Turning on by default for now
#debug=2
#endif

$(warning)

ifeq ($(debug), 1)
CFLAGS += -DDEBUG1
endif

# WTF? w/out empty warning make isn't picking up debug??
$(warning)

ifeq ($(debug), 2)
CFLAGS += -DDEBUG1 -DDEBUG2
endif

########################################################
## Hacking around the ancient software supplied by CAEN:
##
## Feel free to edit / update this as needed

GCC_MAJOR    := $(shell $(CC) -v 2>&1 | \
	grep " version " | cut -d' ' -f3  | cut -d'.' -f1)
GCC_MINOR    := $(shell $(CC) -v 2>&1 | \
	grep " version " | cut -d' ' -f3  | cut -d'.' -f2)

# anyone running clang is modern enough for our purposes
ifeq ($(CC), clang)
GCC_MAJOR := 4
GCC_MINOR := 5
endif

# XXX Surrender and write a configure script at some point
ifeq ($(GCC_MAJOR), )
$(warning Unknown compiler, compiler checks skipped)
GCC_MAJOR := 4
GCC_MINOR := 5
endif

ifneq ($(GCC_MAJOR), 4)
$(error gcc version 4.x required)
endif

ifeq ($(GCC_MINOR), 1)
$(info )
$(info *****************************************************)
$(info * Many compiler checks unavailable on CAEN gcc;     *)
$(info * mostly since it is from 2007: gcc.gnu.org/gcc-4.1 *)
$(info * Consider building on a newer machine instead      *)
$(info *****************************************************)
$(info )

else
# Be strict on warnings
CFLAGS += -Wall -Wextra -Werror

# Some more warnings not otherwise covered
CFLAGS += -Wstrict-prototypes

# Except for some weaknesses of gcc
CFLAGS += -Wno-type-limits

# And watch out for optimizations
CFLAGS += -fno-strict-overflow
endif

# The other necessary cruft:
CFLAGS += -pthread -D_GNU_SOURCE

# Aaaannnnddd... the linker:
LDFLAGS += -g3 -pthread

# Added for student distribution
#CFLAGS += -m32
#LDFLAGS += -m32
